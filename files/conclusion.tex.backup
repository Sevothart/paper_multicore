\section{Conclusion}
\label{sec:conc}

This paper presented an object-oriented design of uniprocessor real-time 
resource protocols. We have implemented the proposed design in an RTOS and 
measured the memory footprint and run-time overhead of the implementation. By 
compiling and running our implementation in a microcontrolled platform, we 
proved that it allows small memory footprint (from 296 to 660 bytes, depending 
on the protocol) and run-time overhead 

As future work, we plan to extend the design to support multiprocessor 
resource access protocols, such as MPCP and MSRP, then implement these 
protocols in EPOS and repeat the schedulability analysis considering the 
run-time overhead.