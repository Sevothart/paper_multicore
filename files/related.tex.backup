\section{Related Work}
\label{sec:rel}

Several general-purposed OSes and RTOSes implement some of the 
analyzed real-time resource access protocol. For instance, FreeRTOS employs 
PIP in the mutex primitive~\cite{freertos} and also supports 
SRP~\cite{Inam:2011}. $LITMUS^{RT}$ supports PCP, SRP, and several 
multiprocessor resource access protocols~\cite{Brandenburg:2008,Spliet:2014}. 
The L4 microkernel~\cite{Liedtke:1995} and Linux support priority inheritance. 
Linux also implements IPCP, under the name PRIO\_PROTECT in the pthreads 
library.

Wang et al. implemented multi-resource versions of PIP and PCP 
in a component-based OS for controlling the access to shared 
stacks~\cite{Wang:2011}. In their experimental evaluation considering the 
schedulability of generated tasks, PIP has performed better than PCP. Thus, 
they have concluded that PIP has potential to provide a high-degree of 
schedulability~\cite{Wang:2011}. In our experimental evaluation, however, PIP 
has presented similar performance in terms of overhead when compared to PCP, but 
had worse schedulability ratios.

Although not directly involved with this paper, resource access protocols for 
multiprocessors have been the subject for many researchers recently. 
MPCP~\cite{Rajkumar:1990} and MrsP~\cite{Burns:2013} are two multiprocessor 
variants of the PCP. Flexible Multiprocessor Locking Protocols (FMLP) is a 
collection of protocols for global and partitioned scheduling~\cite{Block:2007}. 
It was designed to efficiently deal with short non-nested access and to allow 
unrestricted critical section nesting. Parallel Priority Ceiling Protocol 
(P-PCP) extends PIP to avoid unfavorable blocking situations, but increases the 
run-time overhead~\cite{Easwaran:2009}. Biondi and 
Brandenburg~\cite{Biondi:2016} have revisited four synchronization protocols 
under partitioned EDF (P-EDF) scheduling and compared them in terms of 
schedulability. They concluded that the lock-free synchronization approach 
offers advantages on asymmetric multiprocessing platforms. Yang et al. proposed 
new schedulability analyses based on linear programming for several 
multiprocessor semaphore-based locking approaches~\cite{Yang:2015}. The authors 
claim that the new analyses are more accurate than prior approaches.   